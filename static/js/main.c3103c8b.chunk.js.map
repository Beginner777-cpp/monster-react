{"version":3,"sources":["logo.svg","component/card/card.component.jsx","component/card-list/card-list.component.jsx","component/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","src","monster","id","alt","name","email","CardList","monsters","map","SearchBox","changeHandler","placeholder","type","onChange","App","state","searchField","fetch","then","response","json","user","setState","this","filterMonster","filter","e","toLowerCase","includes","target","value","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2RAAe,I,kBCGFA,EAAO,SAACC,GAEnB,OACE,sBAAKC,UAAU,OAAf,UACE,qBAAKC,IAAG,+BAA0BF,EAAMG,QAAQC,GAAxC,0BAAoEC,IAAI,KAChF,6BAAKL,EAAMG,QAAQG,OACnB,4BAAIN,EAAMG,QAAQI,YCLXC,G,MAAW,SAAAR,GAAK,OAC3B,qBAAKC,UAAU,YAAf,SACGD,EAAMS,SAASC,KAAI,SAAAP,GAAO,OACzB,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,WCJZO,G,MAAY,SAAC,GAAoC,IAAlCC,EAAiC,EAAjCA,cAAeC,EAAkB,EAAlBA,YACzC,OACE,uBAAOZ,UAAU,SAASa,KAAK,OAAOC,SAAUH,EAAeC,YAAaA,MC4BjEG,E,kDA3Bb,aAAe,IAAD,8BACZ,gBACKC,MAAQ,CACXR,SAAU,GACVS,YAAa,IAJH,E,qDAOd,WAAqB,IAAD,OAClBC,MAAM,8CACHC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAI,OAAI,EAAKC,SAAS,CAAEf,SAAUc,S,oBAE5C,WAAU,IAAD,SAC2BE,KAAKR,MAA/BR,EADD,EACCA,SAAUS,EADX,EACWA,YACZQ,EAAgBjB,EAASkB,QAAO,SAAAC,GAAC,OAAIA,EAAEtB,KAAKuB,cAAcC,SAASZ,MACzE,OACE,sBAAKjB,UAAU,MAAf,UACE,gDACA,cAAC,EAAD,CACEY,YAAY,eAAeD,cAAe,SAAAgB,GAAC,OAAI,EAAKJ,SAAS,CAAEN,YAAaU,EAAEG,OAAOC,WAEvF,cAAC,EAAD,CAAUvB,SAAUiB,W,GAtBVO,aCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBhB,MAAK,YAAkD,IAA/CiB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.c3103c8b.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react';\r\nimport './card.style.css';\r\n\r\nexport const Card = (props)=>{\r\n  \r\n  return (\r\n    <div className=\"card\">\r\n      <img src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`} alt=\"\"/>\r\n      <h2>{props.monster.name}</h2>\r\n      <p>{props.monster.email}</p>\r\n    </div>\r\n  )\r\n}","import React from 'react';\r\nimport { Card } from '../card/card.component';\r\nimport './card-list.style.css';\r\n\r\nexport const CardList = props => (\r\n  <div className=\"card-list\">\r\n    {props.monsters.map(monster => (\r\n      <Card key={monster.id} monster={monster} />\r\n    ))}\r\n  </div>\r\n);","import React from 'react';\r\nimport './search-box.style.css';\r\n\r\nexport const SearchBox = ({ changeHandler, placeholder }) => {\r\n  return (\r\n    <input className=\"search\" type=\"text\" onChange={changeHandler} placeholder={placeholder} />\r\n  )\r\n}","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport { CardList } from './component/card-list/card-list.component';\nimport { SearchBox } from './component/search-box/search-box.component';\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      monsters: [],\n      searchField: '',\n    }\n  }\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users')\n      .then(response => response.json())\n      .then(user => this.setState({ monsters: user }))\n  }\n  render() {\n    const { monsters, searchField } = this.state;\n    const filterMonster = monsters.filter(e => e.name.toLowerCase().includes(searchField));\n    return (\n      <div className=\"App\">\n        <h1>Robot Monsters</h1>\n        <SearchBox\n          placeholder=\"Search robot\" changeHandler={e => this.setState({ searchField: e.target.value })}\n        />\n        <CardList monsters={filterMonster} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}